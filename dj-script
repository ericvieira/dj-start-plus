#!/bin/bash

pip-install-and-add-to-requirements () {
    pkg=$(echo $1 | tr "[:upper:]" "[:lower:]")
    pip install $pkg
    versioned=$(pip freeze | tr "[:upper:]" "[:lower:]" | grep $pkg==)
    echo $versioned >> requirements-dev.txt
}


usage="Creates a Django base project 

Usage: $(basename "$0") project-name 
Where:
    project-name    The project's name (duh!)"

if [ -z $1 ] || [  ]
then
    echo "$usage"
else

	#cria a pasta e o ambiente e ativa
	mkdir $1
	cd $1
	python -m venv .$1
	source .$1/bin/activate 
	
	#atualiza o pip, instala as libs e cria o requirements.txt
	touch requirements-dev.txt
	pip install --upgrade pip
	pip-install-and-add-to-requirements django
	pip-install-and-add-to-requirements python-decouple
	pip-install-and-add-to-requirements dj-database-url
	pip-install-and-add-to-requirements dj-static
	pip-install-and-add-to-requirements django-extensions
	pip-install-and-add-to-requirements django-test-without-migrations

	cp requirements-dev.txt requirements.txt
	pip-install-and-add-to-requirements jupyter

	#cria o projeto django e a app core
	django-admin startproject $1 .
	python manage.py startapp core
	mv core $1 

	#config git
	git init .
	echo -e ".$1\n.env\n.idea\n*.sqlite3\n*pyc\n__pycache__\nstaticfiles" > .gitignore
	
	#prepara a configuração para o Heroku
	echo -e "gunicorn==19.9.0\npsycopg2==2.8.3" >> requirements.txt
	echo "web: gunicorn $1.wsgi --log-file - " > Procfile

	#cria .env file
	python ../keygen.py > .env
	echo -e "DEBUG=True\nALLOWED_HOSTS=127.0.0.1,.localhost,.herokuapp.com" >> .env

	#config email console
	echo "EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend\nEMAIL_HOST=localhost\nEMAIL_PORT=25\nEMAIL_USE_TSL=False\nEMAIL_HOST_USER=\nEMAIL_HOST_PASSWORD=" >> .env
fi
